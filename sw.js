const CACHE_NAME="app-shell-v1",OFFLINE_URL="/index.html",ASSETS_TO_CACHE=["/","/index.html","/manifest.json","/icons/icon-192.png","/icons/icon-512.png","/bundle.js","/styles.css"];self.addEventListener("install",(t=>{t.waitUntil(caches.open(CACHE_NAME).then((t=>t.addAll(ASSETS_TO_CACHE))).then((()=>self.skipWaiting())))})),self.addEventListener("activate",(t=>{t.waitUntil(caches.keys().then((t=>Promise.all(t.map((t=>t!==CACHE_NAME?caches.delete(t):null))))).then((()=>self.clients.claim())))})),self.addEventListener("fetch",(t=>{const e=new URL(t.request.url);e.pathname.startsWith("/api/")||e.hostname.includes("your-api-domain")?t.respondWith(fetch(t.request).then((t=>t)).catch((()=>caches.match(t.request)))):t.respondWith(caches.match(t.request).then((e=>e||fetch(t.request).catch((()=>caches.match(OFFLINE_URL))))))})),self.addEventListener("push",(t=>{let e={title:"Notifikasi",body:"Ada update",url:"/"};try{t.data&&(e=t.data.json())}catch(t){}const n={body:e.body,icon:"/icons/icon-192.png",badge:"/icons/icon-192.png",data:{url:e.url}};t.waitUntil(self.registration.showNotification(e.title,n))})),self.addEventListener("notificationclick",(t=>{t.notification.close();const e=t.notification.data?.url||"/";t.waitUntil(clients.matchAll({type:"window"}).then((t=>{for(const n of t)if(n.url===e&&"focus"in n)return n.focus();if(clients.openWindow)return clients.openWindow(e)})))}));